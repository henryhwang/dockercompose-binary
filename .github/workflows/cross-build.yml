name: cross_arm64
on:
  push:
    tags:
      - T*

jobs:
  multiarch:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Active qemu
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - uses: docker://multiarch/ubuntu-core:arm64-bionic
        with:
          args: 'uname -a'
      - name: Check result
        run: |
          docker pull arm64v8/python:buster
          docker run --rm arm64v8/python:buster uname -a
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Active qemu
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Setup buildx
        uses: docker/setup-buildx-action@v1
      - name: Avalaible platforms
        run: echo ${{ steps.qemu.outputs.platforms }}
      - name: Check the result
        run: |
          docker pull arm64v8/python:buster
          docker run --rm arm64v8/python:3.7.10-slim-stretch uname -a
      - name: Check the latest release of docker/compose
        id: latest_version
        uses: abatilo/release-info-action@v1.3.0
        with:
          owner: docker
          repo: compose
      - name: Example of consumption of the result
        env:
          LATEST_VERSION: ${{ steps.latest_version.outputs.latest_tag }}
          LATEST_DATE: ${{ steps.latest_version.outputs.latest_tag_published_at }}
          LATEST_COMMIT: ${{ steps.latest_version.outputs.latest_commitish }}
        run: |
          echo "Version $LATEST_VERSION was released at $LATEST_DATE with LATEST_COMMIT"
  build-arm64:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Active qemu
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Checkout docker/compose repo
        uses: actions/checkout@v2
        with:
          repository: 'docker/compose'
      - name: Checkout this repo into tools/ directory
        uses: actions/checkout@v2
        with:
          path: tools
      - name: Build compose to binary using Docker build
        run: |
          set -ex
          export DOCKER_BUILDKIT=1

          ./script/clean

          DOCKER_COMPOSE_GITSHA="$(./script/build/write-git-sha)"
          docker build . \
              -f ./tools/Dockerfile.build-only \
              --build-arg GIT_COMMIT="${DOCKER_COMPOSE_GITSHA}" \
              --build-arg TARGETOS="linux" \
              --output dist/
      - name: Upload the build result
        uses: actions/upload-artifact@v2
        with:
          name: temp-result
          path: dist
  build-native:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout docker/compose repo
        uses: actions/checkout@v2
        with:
          repository: 'docker/compose'
      - name: Checkout this repo into tools/ directory
        uses: actions/checkout@v2
        with:
          path: tools
      - name: build
        run: |
          set -ex
          export DOCKER_BUILDKIT=1

          ./script/clean

          DOCKER_COMPOSE_GITSHA="$(script/build/write-git-sha)"
          docker build . \
              -f tools/Dockerfile.build-only \
              --target bin \
              --build-arg DISTRO=debian \
              --build-arg GIT_COMMIT="${DOCKER_COMPOSE_GITSHA}" \
              --build-arg TARGETOS="linux" \
              --output dist/
      - name: Upload the build result
        uses: actions/upload-artifact@v2
        with:
          name: temp-result
          path: dist
